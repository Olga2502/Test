# Реализовать функцию, принимающую два числа (позиционные аргументы)
# и выполняющую их деление. Числа запрашивать у пользователя,
# предусмотреть обработку ситуации деления на ноль.

def devision(*a):
    if a[1] == 0:
        return 'Деление на 0 не возможно'
    return a[0] / a[1]
    if a[1] == 0:
        return 'Деление на ноль не предусмотрено'
    return a[0] / a[1]


print(devision(int(input('Введите первое число: ')), int(input('Введите второе число: '))))

 
#Выполнить функцию, которая принимает несколько параметров, описывающих данные 
#пользователя: имя, фамилия, год рождения, город проживания, email, телефон. 
#Функция должна принимать параметры как именованные аргументы. 
#Осуществить вывод данных о пользователе одной строкой.


def info(name, surname, year, city, email, phone):
    print(' '.join([name, surname, year, city, email, phone]))

info(input("Имя : "), input("Фамилиия : "), input("Год рождения: "), input("Город проживания : "), input("Email: "), input("Телефонный номер: "))


#Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших
# двух аргументов. 

def my_func(num1, num2, num3):
    v = [num1, num2, num3]
    min_v = min(v)
    v.remove(min_v)
    return sum(v)

num1, num2, num3 = [float(x) for x in input('Введите  3 числа: ').split()]
print(my_func(num1, num2, num3))


# Программа принимает действительное положительное число x и целое отрицательное число y. 
# Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). 
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью 
# оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование
# цикла.

def my_func(x, y):
    return x**y    

x =4
y = -2   

print(my_func(x, y))


def my_func(x, y):
    x1 = 1
    for i in range(abs(y)):
        x1 /= x
    return x1

print(my_func(x, y))

# Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, 
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже 
# подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается. 
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел 
# к полученной ранее сумме и после этого завершить программу.

def SYmbol(lst, s_symbol="#"):
    return s_symbol in (token.upper() for token in lst)


def Numb(lst):
    return [int(token) for token in lst if token.isdigit()]

exit = False
summ = 0
while not exit:
    st = [x for x in input('Введите число : ').split()]
    summ += sum(Numb(st))
    print(f'summ = {summ}')
    exit = SYmbol(st)
    
    
# Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. 
# Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().    